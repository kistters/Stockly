version: "3.8"
services:
  chrome-standalone:
    image: selenium/standalone-chrome:4.13.0
    hostname: chrome
    container_name: chrome-standalone
    privileged: true
    shm_size: 2g
    ports:
      - "4444:4444"
      - "7900:7900"
    environment:
      - SE_NODE_MAX_SESSIONS=5

  backend:
    build:
      context: .
      target: ${TARGET:-production} # Use environment variable 'TARGET', default to 'production'
    container_name: backend
    ports:
      - "8000:8080"
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  scrapyd:
    build:
      context: .
      target: 'scrapyd'
    command: ["scrapyd"]
    container_name: scrapyd
    ports:
      - "6800:6800"
    volumes:
      - ./.scrapyd/lib:/var/lib/scrapyd
      - .:/app
    environment:
      - SELENIUM_GRID_ENDPOINT=http://chrome:4444

  redis:
    image: redis:7.2
    hostname: redis_hostname
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data

  postgres:
    image: postgres:13
    hostname: postgres_hostname
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
        POSTGRES_USER: "postgres"
        POSTGRES_PASSWORD: "secret"
        POSTGRES_DB: "stockly"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

volumes:
  redis_data:
  postgres_data:
  scrapyd_data: